{"name":"Summary.js","tagline":"JS module for making short summary of some text","body":"### Summary.js\r\n\r\nThis algorithm was found in the Internet at http://thetokenizer.com/2013/04/28/build-your-own-summary-tool/\r\nAs at this moment I try to implement add-on for Firefox, and some function I've needed was to summarize web-content.\r\n\r\nSo the main Idea of the algorithm is to build matrix of mutual sentences intersection which is calculates by counting the same words in two sections and division this count with avarage sentence length in words.\r\n\r\nThan we summarize intersactions for every sentence and with this value choise what sentence should be used in summary.\r\n\r\nThis algorithm I've implemented in javascript, so the source is at https://github.com/kostyll/summary.js\r\n\r\n### Functions in the future\r\n* add support of languade detection\r\n* add stop-words lists for the most popular languages to improve efficiency\r\n\r\n### My Idea in future:\r\n if there is ability to detect source language (module detects it) the library process text with general algorithm, but before makes preprocessing by removing stop-words from content - in other case - just uses this general algorithm\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}